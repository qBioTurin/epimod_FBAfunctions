% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_hypernode.R
\name{build_hypernode}
\alias{build_hypernode}
\title{Build and analyse a hyper‑node automatically}
\usage{
build_hypernode(
  hypernode_name,
  config_yaml,
  boundary_conditions_file,
  initial_data,
  mat_dir = "models",
  base_dir = getwd(),
  overwrite = FALSE,
  debug = FALSE
)
}
\arguments{
\item{hypernode_name}{Character.  Label for the run (no extension).}

\item{config_yaml}{Path to the YAML file.}

\item{mat_dir}{Folder containing user \emph{.mat} files (default "models").}

\item{base_dir}{Root working directory (default = \code{getwd()}).}

\item{overwrite}{Logical.  Delete any previous run with the same
name before rebuilding (FALSE).}

\item{debug}{Passed to \code{epimod::model.analysis()}.}

\item{pnpro_template}{Path to a PNPRO skeleton.  If just a filename it
is searched in the package’s \verb{extdata/} folder.}
}
\value{
(Invisibly) a list of created sub‑paths.
}
\description{
One function = the whole workflow.  It reproduces the original
\emph{minimal‑doublet} demo but works for any community size and lets the
user mix built‑in and custom \emph{.mat} models.
}
\details{
Required user files \emph{only}:
• a \strong{YAML} configuration (\code{config_yaml})
• a PNPRO \strong{template} (\code{pnpro_template})
• any custom \emph{.mat} files (placed in \code{mat_dir})

Everything else (templates, built‑in MAT models, lookup tables…) is
retrieved with \code{system.file()}.

Paths resolved:
\itemize{
\item PNPRO template
\enumerate{
\item absolute / relative path as given
\item \verb{inst/extdata/<file>} shipped with the package
}
\item MAT models
\enumerate{
\item explicit path ending in \code{.mat}
\item \verb{<mat_dir>/<name>.mat}
\item \verb{inst/MATmodels/<name>.mat}
}
}

All artefacts are written to:
\verb{<base_dir>/hypernodes/<hypernode_name>/}
and the generated PNPRO is saved to
\verb{<base_dir>/petri_nets_library/<hypernode_name>.PNPRO}.
}
